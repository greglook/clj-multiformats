version: 2.1

# Common executor configuration
executors:
  clojure:
    docker:
      - image: cimg/clojure:1.11-openjdk-11.0
    working_directory: ~/repo


# Job definitions
jobs:
  style:
    executor: clojure
    steps:
      - checkout
      - run:
          name: Install cljstyle
          environment:
            CLJSTYLE_VERSION: 0.15.0
          command: |
            wget https://github.com/greglook/cljstyle/releases/download/${CLJSTYLE_VERSION}/cljstyle_${CLJSTYLE_VERSION}_linux.zip
            unzip cljstyle_${CLJSTYLE_VERSION}_linux.zip
      - run:
          name: Check source formatting
          command: "./cljstyle check --report"

  lint:
    executor: clojure
    steps:
      - checkout
      - run:
          name: Install clj-kondo
          environment:
            CLJ_KONDO_VERSION: 2022.11.02
          command: |
            wget https://github.com/borkdude/clj-kondo/releases/download/v${CLJ_KONDO_VERSION}/clj-kondo-${CLJ_KONDO_VERSION}-linux-amd64.zip
            unzip clj-kondo-${CLJ_KONDO_VERSION}-linux-amd64.zip
      - run:
          name: clj-kondo
          command: "./clj-kondo --lint src:test"

  test-clj:
    executor: clojure
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-test-clj-{{ checksum "deps.edn" }}
            - v1-test-clj-
      - run: bin/test check
      - run: bin/test unit
      - save_cache:
          key: v1-test-clj-{{ checksum "deps.edn" }}
          paths:
            - ~/.m2

  test-cljs:
    executor: clojure
    environment:
      QT_QPA_PLATFORM: offscreen
    steps:
      - run:
          name: Install NodeJS
          command: |
            sudo apt-get update
            sudo apt-get install -y npm
      - checkout
      - restore_cache:
          keys:
            - v1-test-cljs-{{ checksum "deps.edn" }}
            - v1-test-cljs-
      - run: bin/test unit-cljs
      - save_cache:
          key: v1-test-cljs-{{ checksum "deps.edn" }}
          paths:
            - ~/.m2
            - node_modules

  test-bb:
    executor: clojure
    steps:
      - run:
          name: Install babashka
          command: |
            sudo bash < <(curl -s https://raw.githubusercontent.com/babashka/babashka/master/install)
      - checkout
      - restore_cache:
          keys:
            - v1-test-bb-{{ checksum "deps.edn" }}
            - v1-test-bb-
      - run: bb test:bb
      - save_cache:
          key: v1-test-bb-{{ checksum "deps.edn" }}
          paths:
            - ~/.m2

  coverage:
    executor: clojure
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-coverage-{{ checksum "deps.edn" }}
            - v1-coverage-
            - v1-test-clj-
      - run:
          name: Generate test coverage
          command: bin/test coverage --codecov
      - save_cache:
          paths:
            - ~/.m2
          key: v1-coverage-{{ checksum "project.clj" }}
      - store_artifacts:
          path: target/coverage
          destination: coverage
      - run:
          name: Install codecov
          command: |
            sudo apt-get update && sudo apt-get install gpg
            curl https://keybase.io/codecovsecurity/pgp_keys.asc | gpg --no-default-keyring --keyring trustedkeys.gpg --import
            curl -Os https://uploader.codecov.io/latest/linux/codecov
            curl -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM
            curl -Os https://uploader.codecov.io/latest/linux/codecov.SHA256SUM.sig
            gpgv codecov.SHA256SUM.sig codecov.SHA256SUM
            shasum -a 256 -c codecov.SHA256SUM
            chmod +x codecov
      - run:
          name: Publish coverage report
          command: './codecov -f target/coverage/codecov.json'


# Workflow definitions
workflows:
  version: 2
  test:
    jobs:
      - style
      - lint
      - test-clj
      - test-cljs
      - test-bb
      - coverage:
          requires:
            - test-clj
